{"version":3,"sources":["components/header/header.module.css","components/traits/traitsList/traitsList.module.css","components/profession/profession.module.css","components/header/headerContainer.jsx","components/header/header.jsx","components/profession/professionContainer.jsx","components/profession/profession.jsx","components/stats/statsContainer.jsx","components/stats/stats.jsx","components/traits/traitsList/traitsList.jsx","components/traits/traitsContainer.jsx","components/traits/traits.jsx","components/skills/skillsContainer.jsx","components/skills/skills.jsx","App.js","serviceWorker.js","redux/headerReducer.js","redux/professionReducer.js","redux/statsReducer.js","redux/traitsReducer.js","redux/skillsReducer.js","redux/store.js","index.js"],"names":["module","exports","HeaderContainer","connect","state","pointsLeft","header","pickedTraits","traits","dispatch","changePoints","value","type","props","className","styles","button","to","error","ProfessionContainer","professionList","profession","activeProfession","activateProfession","map","index","professionName","Object","keys","onClick","cost","pickProfession","key","active","StatsContainer","statsList","stats","activeStat","changeStat","stat","activateStat","statName","onMouseOver","onMouseOut","decreaseStat","increaseStat","description","TraitsList","traitPicked","trait","some","pickedTrait","traitsHolder","traitsList","item","traitName","pickTrait","activateTrait","TraitsContainer","goodTraitsList","badTraitsList","activeTrait","SkillsContainer","skillsList","skills","activeSkill","changeSkill","skill","activateSkill","skillName","decreaseSkill","increaseSkill","App","path","render","Boolean","window","location","hostname","match","initialState","Ninja","Hobo","strength","dexterity","intelligence","perception","fast","willpower","religious","albino","asthma","insomnia","melee","crafting","tailoring","medicine","reducers","combineReducers","action","clone","JSON","parse","stringify","forEach","actionTrait","withRemovedTrait","filter","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3ca62987.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3Bf2j\",\"button\":\"header_button__1i0ad\",\"pointsCounter\":\"header_pointsCounter__RWtsp\",\"error\":\"header_error__1XrN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"traitsHolder\":\"traitsList_traitsHolder__3J0Rh\",\"trait\":\"traitsList_trait__oklwh\",\"pickedTrait\":\"traitsList_pickedTrait__3NwmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profession\":\"profession_profession__2XyZ2\",\"active\":\"profession_active__3tgdz\"};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Header} from \"./header\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    pointsLeft: state.header.pointsLeft,\r\n    pickedTraits: state.traits.pickedTraits\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changePoints: (value) => {\r\n      dispatch({type: 'CHANGE-POINTS', value})\r\n    }\r\n  }\r\n};\r\n\r\nconst HeaderContainer =  connect(mapStateToProps, mapDispatchToProps)(Header);\r\nexport default HeaderContainer;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./header.module.css\"\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <nav>\r\n        <NavLink className={styles.button} to={`/profession`}>Profession</NavLink>\r\n        <NavLink className={styles.button} to={`/stats`}>Stats</NavLink>\r\n        <NavLink className={styles.button} to={`/traits`}>Traits</NavLink>\r\n        <NavLink className={styles.button} to={`/skills`}>Skills</NavLink>\r\n        <NavLink className={styles.button} to={`/description`}>Description</NavLink>\r\n      </nav>\r\n      <div className={props.pointsLeft < 0 ? styles.error : ``}>Points left: {props.pointsLeft}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Profession} from \"./profession\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    professionList: state.profession.professionList,\r\n    activeProfession: state.profession.activeProfession\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    activateProfession: (profession) => {\r\n      dispatch({type: 'ACTIVATE-PROFESSION', profession: profession})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: 'CHANGE-POINTS', value: value})\r\n    }\r\n  }\r\n};\r\n\r\nconst ProfessionContainer = connect(mapStateToProps, mapDispatchToProps)(Profession);\r\nexport default ProfessionContainer;","import React from 'react';\r\nimport styles from \"./profession.module.css\"\r\n\r\nexport const Profession = (props) => {\r\n\r\n  const pickProfession = (profession, professionName) => {\r\n    if (props.activeProfession === profession[professionName]) {\r\n      return;\r\n    }\r\n    if (props.activeProfession.cost) {\r\n      props.changePoints(props.activeProfession.cost)\r\n    }\r\n    props.activateProfession(profession[professionName]);\r\n    props.changePoints(-profession[professionName].cost);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {props.professionList.map((profession, index) => {\r\n          let professionName = Object.keys(profession)[0];\r\n          return <span onClick={() => {\r\n            pickProfession(profession, professionName)\r\n          }} key={index}\r\n                       className={profession[professionName] === props.activeProfession ?\r\n                         `${styles.profession} ${styles.active}` :\r\n                         styles.profession}>{professionName}</span>\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {Stats} from \"./stats\";\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    statsList: state.stats.statsList,\r\n    activeStat: state.stats.activeStat\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeStat: (stat, value) => {\r\n      dispatch({type: `CHANGE-STAT`, stat, value})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: `CHANGE-POINTS`, value})\r\n    },\r\n    activateStat: (stat) => {\r\n      dispatch({type: `ACTIVATE-STAT`, stat})\r\n    }\r\n  }\r\n};\r\n\r\nconst StatsContainer = connect(mapStateToProps, mapDispatchToProps)(Stats);\r\nexport default StatsContainer;","import React from 'react';\r\n\r\nexport const Stats = (props) => {\r\n\r\n  const increaseStat = (stat, statName) => {\r\n    if (stat[statName] >= 14) {\r\n      return\r\n    }\r\n    if (stat[statName] < 12) {\r\n      props.changeStat(statName, 1);\r\n      props.changePoints(-1)\r\n    } else {\r\n      props.changeStat(statName, 1);\r\n      props.changePoints(-2)\r\n    }\r\n  };\r\n\r\n  const decreaseStat = (stat, statName) => {\r\n    if (stat[statName] <= 4) {\r\n      return\r\n    }\r\n    if (stat[statName] <= 12) {\r\n      props.changeStat(statName, -1);\r\n      props.changePoints(1)\r\n    } else {\r\n      props.changeStat(statName, -1);\r\n      props.changePoints(2)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        props.statsList.map((stat, index) => {\r\n          let statName = Object.keys(stat)[0];\r\n          return <div key={index}><span\r\n            onMouseOver={() => {\r\n              props.activateStat(stat)\r\n            }}\r\n            onMouseOut={() => {\r\n              props.activateStat(null)\r\n            }}>\r\n            {statName} {stat[statName]}\r\n            <button onClick={() => {\r\n              decreaseStat(stat, statName)\r\n            }}>-</button>\r\n            <button onClick={() => {\r\n              increaseStat(stat, statName)\r\n            }}>+</button>\r\n          </span>\r\n          </div>\r\n        })\r\n      }\r\n      <div>{props.activeStat && props.activeStat.description}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport styles from './traitsList.module.css'\r\n\r\nexport const TraitsList = (props) => {\r\n\r\n  const traitPicked = (trait) => {\r\n    return props.pickedTraits.some((pickedTrait) => {\r\n      return Object.keys(pickedTrait)[0] === Object.keys(trait)[0];\r\n    });\r\n  };\r\n\r\n  return (\r\n      <div className={styles.traitsHolder}>\r\n        {\r\n          props.traitsList.map((item, index) => {\r\n            let traitName = Object.keys(item)[0];\r\n            return <span\r\n              key={index}\r\n              onClick={() => {\r\n                let cost = item[Object.keys(item)[0]].cost;\r\n                props.pickTrait(item);\r\n                traitPicked(item) ? props.changePoints(cost) : props.changePoints(-cost);\r\n              }}\r\n              onMouseOver={() => {\r\n                props.activateTrait(item[traitName])\r\n              }}\r\n              onMouseOut={() => {\r\n                props.activateTrait(null)\r\n              }}\r\n              className={traitPicked(item) ? `${styles.trait} ${styles.pickedTrait}` : styles.trait}>{traitName}</span>\r\n          })\r\n        }\r\n      </div>\r\n  )\r\n};","import React from 'react';\r\nimport {Traits} from \"./traits\";\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    goodTraitsList: state.traits.goodTraitsList,\r\n    badTraitsList: state.traits.badTraitsList,\r\n    pickedTraits: state.traits.pickedTraits,\r\n    pointsLeft: state.header.pointsLeft,\r\n    activeTrait: state.traits.activeTrait\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    pickTrait: (trait) => {\r\n      dispatch({type: `TOGGLE-TRAIT-PICK`, trait})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: `CHANGE-POINTS`, value})\r\n    },\r\n    activateTrait: (trait) => {\r\n      dispatch({type: `ACTIVATE-TRAIT`, trait})\r\n    }\r\n  }\r\n};\r\n\r\nconst TraitsContainer = connect(mapStateToProps, mapDispatchToProps)(Traits);\r\nexport default TraitsContainer;","import React from 'react';\r\nimport {TraitsList} from \"./traitsList/traitsList\";\r\n\r\nexport const Traits = (props) => {\r\n  return (\r\n    <div>\r\n      <TraitsList  traitsList={props.goodTraitsList} pickTrait={props.pickTrait}\r\n                   activateTrait={props.activateTrait} changePoints={props.changePoints}\r\n                   pickedTraits={props.pickedTraits} />\r\n      <TraitsList  traitsList={props.badTraitsList} pickTrait={props.pickTrait}\r\n                   activateTrait={props.activateTrait} changePoints={props.changePoints}\r\n                   pickedTraits={props.pickedTraits} />\r\n      <div>{props.activeTrait ? `${props.activeTrait.description}, cost ${props.activeTrait.cost}` : ``}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Skills} from \"./skills\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    skillsList: state.skills.skillsList,\r\n    activeSkill: state.skills.activeSkill\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeSkill: (skill, value) => {\r\n      dispatch({type: `CHANGE-SKILL`, skill, value})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: `CHANGE-POINTS`, value})\r\n    },\r\n    activateSkill: (skill) => {\r\n      dispatch({type: `ACTIVATE-SKILL`, skill})\r\n    }\r\n  }\r\n};\r\n\r\nconst SkillsContainer = connect(mapStateToProps, mapDispatchToProps)(Skills);\r\nexport default SkillsContainer;","import React from 'react';\r\n\r\nexport const Skills = (props) => {\r\n\r\n  const increaseSkill = (skill, skillName) => {\r\n    switch (skill[skillName]) {\r\n      case 1:\r\n      case 2:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-1);\r\n        break;\r\n      case 3:\r\n      case 4:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-2);\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-3);\r\n        break;\r\n      case 7:\r\n      case 8:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-4);\r\n        break;\r\n      case 9:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-5);\r\n    }\r\n  };\r\n\r\n  const decreaseSkill = (skill, skillName) => {\r\n    switch (skill[skillName]) {\r\n      case 2:\r\n      case 3:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(1);\r\n        break;\r\n      case 4:\r\n      case 5:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(2);\r\n        break;\r\n      case 6:\r\n      case 7:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(3);\r\n        break;\r\n      case 8:\r\n      case 9:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(4);\r\n        break;\r\n      case 10:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        props.skillsList.map((skill) => {\r\n          let skillName = Object.keys(skill)[0];\r\n          return <div><span\r\n            onMouseOver={() => {\r\n              props.activateSkill(skill)\r\n            }}\r\n            onMouseOut={() => {\r\n              props.activateSkill(null)\r\n            }}>\r\n            {skillName} {skill[skillName]}\r\n            <button onClick={() => {\r\n              decreaseSkill(skill, skillName)\r\n            }}>-</button>\r\n            <button onClick={() => {\r\n              increaseSkill(skill, skillName)\r\n            }}>+</button>\r\n          </span>\r\n          </div>\r\n        })\r\n      }\r\n      <div>{props.activeSkill && props.activeSkill.description}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/header/headerContainer\";\nimport {Route} from \"react-router-dom\";\nimport ProfessionContainer from \"./components/profession/professionContainer\";\nimport StatsContainer from \"./components/stats/statsContainer\";\nimport TraitsContainer from \"./components/traits/traitsContainer\";\nimport SkillsContainer from \"./components/skills/skillsContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <HeaderContainer/>\n      <Route path={`/profession`}\n             render={() => <ProfessionContainer/>}/>\n      <Route path={`/stats`}\n             render={() => <StatsContainer/>}/>\n      <Route path={`/traits`}\n             render={() => <TraitsContainer/>}/>\n      <Route path={`/skills`}\n             render={() => <SkillsContainer/>}/>\n      {/*<Route path={`/description`}*/}\n             {/*render={() => <Description/>}/>*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n  pointsLeft: 8\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE-POINTS':\r\n      return {\r\n        ...state,\r\n        pointsLeft: state.pointsLeft + action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","let initialState = {\r\n  professionList: [\r\n    {\r\n      Ninja: {\r\n        cost: 3\r\n      }\r\n    },\r\n    {\r\n      Hobo: {\r\n        cost: 1\r\n      }\r\n    },\r\n  ],\r\n  activeProfession: {}\r\n};\r\n\r\nexport const professionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ACTIVATE-PROFESSION':\r\n      return {\r\n        ...state,\r\n        activeProfession: action.profession\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","let initialState = {\r\n  statsList: [\r\n    {\r\n      strength: 8,\r\n      description: `strength descr`\r\n    },\r\n    {\r\n      dexterity: 8,\r\n      description: `dexterity descr`\r\n    },\r\n    {\r\n      intelligence: 8,\r\n      description: `intelligence descr`\r\n    },\r\n    {\r\n      perception: 8,\r\n      description: `perception descr`\r\n    },\r\n  ],\r\n  activeStat: null\r\n};\r\n\r\nexport const statsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE-STAT':\r\n      let clone = JSON.parse(JSON.stringify(state));\r\n      clone.statsList.forEach((stat) => {\r\n        let [statName] = Object.keys(stat);\r\n        if (statName === action.stat) {\r\n          stat[statName] += action.value\r\n        }\r\n      });\r\n      return clone;\r\n    case `ACTIVATE-STAT`:\r\n      return {\r\n        ...state,\r\n        activeStat: action.stat\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};","let initialState = {\r\n  goodTraitsList: [\r\n    {\r\n      fast: {\r\n        cost: 3,\r\n        description: `do some fasty`\r\n      }\r\n    },\r\n    {\r\n      willpower: {\r\n        cost: 2,\r\n        description: `do some willpowery`\r\n      }\r\n    },\r\n    {\r\n      religious: {\r\n        cost: 1,\r\n        description: `do some religiously`\r\n      }\r\n    }\r\n  ],\r\n\r\n  badTraitsList: [\r\n    {\r\n      albino: {\r\n        cost: -1,\r\n        description: `do some albiny`\r\n      }\r\n    },\r\n    {\r\n      asthma: {\r\n        cost: -3,\r\n        description: `do some asthmy`\r\n      }\r\n    },\r\n    {\r\n      insomnia: {\r\n        cost: -2,\r\n        description: `do some insomny`\r\n      }\r\n    },\r\n  ],\r\n\r\n  activeTrait: null,\r\n\r\n  pickedTraits: []\r\n};\r\n\r\nexport const traitsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ACTIVATE-TRAIT':\r\n      return {\r\n        ...state,\r\n        activeTrait: action.trait\r\n      };\r\n    case 'TOGGLE-TRAIT-PICK':\r\n      let actionTrait = Object.keys(action.trait)[0];\r\n      let traitPicked = state.pickedTraits.some((trait) => {\r\n        return Object.keys(trait)[0] === actionTrait;\r\n      });\r\n      if (traitPicked) {\r\n        let withRemovedTrait = state.pickedTraits.filter((trait) => {\r\n          return Object.keys(trait)[0] !== actionTrait\r\n        });\r\n        return {\r\n          ...state,\r\n          pickedTraits: withRemovedTrait\r\n        }\r\n      } else return {\r\n        ...state,\r\n        pickedTraits: [...state.pickedTraits, action.trait]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","let initialState = {\r\n  skillsList: [\r\n    {\r\n      melee: 1,\r\n      description: `melee descr`\r\n    },\r\n    {\r\n      crafting: 1,\r\n      description: `crafting descr`\r\n    },\r\n    {\r\n      tailoring: 1,\r\n      description: `tailoring descr`\r\n    },\r\n    {\r\n      medicine: 1,\r\n      description: `medicine descr`\r\n    },\r\n  ],\r\n  activeSkill: null\r\n};\r\n\r\nexport const skillsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE-SKILL':\r\n      let clone = JSON.parse(JSON.stringify(state));\r\n      clone.skillsList.forEach((skill) => {\r\n        let [skillName] = Object.keys(skill);\r\n        if (skillName === action.skill) {\r\n          skill[skillName] += action.value\r\n        }\r\n      });\r\n      return clone;\r\n    case `ACTIVATE-SKILL`:\r\n      return {\r\n        ...state,\r\n        activeSkill: action.skill\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import {combineReducers, createStore} from \"redux\";\r\nimport {headerReducer} from \"./headerReducer\";\r\nimport {professionReducer} from \"./professionReducer\";\r\nimport {statsReducer} from \"./statsReducer\";\r\nimport {traitsReducer} from \"./traitsReducer\";\r\nimport {skillsReducer} from \"./skillsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  header: headerReducer,\r\n  profession: professionReducer,\r\n  stats: statsReducer,\r\n  traits: traitsReducer,\r\n  skills: skillsReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}