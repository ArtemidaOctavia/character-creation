{"version":3,"sources":["components/header/header.module.css","components/traits/traits.module.css","components/profession/profession.module.css","components/header/headerContainer.jsx","components/header/header.jsx","components/profession/professionContainer.jsx","components/profession/profession.jsx","components/stats/statsContainer.jsx","components/stats/stats.jsx","components/traits/traitsContainer.jsx","components/traits/traits.jsx","App.js","serviceWorker.js","redux/headerReducer.js","redux/professionReducer.js","redux/statsReducer.js","redux/traitsReducer.js","redux/store.js","index.js","components/stats/stats.module.css"],"names":["module","exports","HeaderContainer","connect","state","pointsLeft","header","dispatch","changePoints","value","type","props","className","styles","button","to","ProfessionContainer","professionList","profession","activeProfession","activateProfession","map","item","index","professionName","Object","keys","onClick","cost","key","active","StatsContainer","strength","stats","dexterity","intelligence","perception","changeStrength","changeDexterity","changeIntelligence","changePerception","increase","stat","decease","statList","description","TraitsContainer","goodTraitsList","traits","badTraitsList","pickedTraits","activeTrait","pickTrait","trait","activateTrait","traitsHolder","traitName","onDoubleClick","App","path","render","Boolean","window","location","hostname","match","initialState","Ninja","Hobo","fast","willpower","religious","albino","asthma","insomnia","reducers","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fac853c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3Bf2j\",\"button\":\"header_button__1i0ad\",\"pointsCounter\":\"header_pointsCounter__RWtsp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"traitsHolder\":\"traits_traitsHolder__YZ6DC\",\"trait\":\"traits_trait__2Xv4B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profession\":\"profession_profession__2XyZ2\",\"active\":\"profession_active__3tgdz\"};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Header} from \"./header\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    pointsLeft: state.header.pointsLeft\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changePoints: (value) => {\r\n      dispatch({type: 'CHANGE-POINTS', value})\r\n    }\r\n  }\r\n};\r\n\r\nconst HeaderContainer =  connect(mapStateToProps, mapDispatchToProps)(Header);\r\nexport default HeaderContainer;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./header.module.css\"\r\n\r\nexport const Header = (props) => {\r\n\r\n  return (\r\n    <div className={styles.header}>\r\n      <nav>\r\n        <NavLink className={styles.button} to={`/profession`}>Profession</NavLink>\r\n        <NavLink className={styles.button} to={`/stats`}>Stats</NavLink>\r\n        <NavLink className={styles.button} to={`/traits`}>Traits</NavLink>\r\n        <NavLink className={styles.button} to={`/skills`}>Skills</NavLink>\r\n        <NavLink className={styles.button} to={`/description`}>Description</NavLink>\r\n      </nav>\r\n      <div>Points left: {props.pointsLeft}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Profession} from \"./profession\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    professionList: state.profession.professionList,\r\n    activeProfession: state.profession.activeProfession\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    activateProfession: (profession) => {\r\n      dispatch({type: 'ACTIVATE-PROFESSION', profession: profession})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: 'CHANGE-POINTS', value: value})\r\n    }\r\n  }\r\n};\r\n\r\nconst ProfessionContainer = connect(mapStateToProps, mapDispatchToProps)(Profession);\r\nexport default ProfessionContainer;","import React from 'react';\r\nimport styles from \"./profession.module.css\"\r\n\r\nexport const Profession = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {props.professionList.map((item, index) => {\r\n          let professionName = Object.keys(item)[0];\r\n          return <span onClick={() => {\r\n            if (props.activeProfession === item[professionName]) {\r\n              return;\r\n            }\r\n            if (props.activeProfession.cost) {\r\n              props.changePoints(props.activeProfession.cost)\r\n            }\r\n            props.activateProfession(item[professionName]);\r\n            props.changePoints(-item[professionName].cost);\r\n          }} key={index}\r\n                       className={item[professionName] === props.activeProfession ?\r\n                         `${styles.profession} ${styles.active}` :\r\n                         styles.profession}>{professionName}</span>\r\n        })}\r\n      </div>\r\n\r\n      <div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {Stats} from \"./stats\";\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    strength: state.stats.strength,\r\n    dexterity: state.stats.dexterity,\r\n    intelligence: state.stats.intelligence,\r\n    perception: state.stats.perception,\r\n    pointsLeft: state.header.pointsLeft\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeStrength: (value) => {\r\n      dispatch({type: 'CHANGE-STRENGTH', value})\r\n    },\r\n    changeDexterity: (value) => {\r\n      dispatch({type: 'CHANGE-DEXTERITY', value})\r\n    },\r\n    changeIntelligence: (value) => {\r\n      dispatch({type: 'CHANGE-INTELLIGENCE', value})\r\n    },\r\n    changePerception: (value) => {\r\n      dispatch({type: 'CHANGE-PERCEPTION', value})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: 'CHANGE-POINTS', value})\r\n    }\r\n  }\r\n};\r\n\r\nconst StatsContainer = connect(mapStateToProps, mapDispatchToProps)(Stats);\r\nexport default StatsContainer;","import React from 'react';\r\nimport styles from './stats.module.css'\r\n\r\nexport const Stats = (props) => {\r\n\r\n  const increase = (stat) => {\r\n    if(props.pointsLeft <= 0) {\r\n      return\r\n    }\r\n    props.changePoints(-1);\r\n    switch (stat) {\r\n      case 'str':\r\n        props.changeStrength(1);\r\n        break;\r\n      case 'dex':\r\n        props.changeDexterity(1);\r\n        break;\r\n      case 'int':\r\n        props.changeIntelligence(1);\r\n        break;\r\n      case 'per':\r\n        props.changePerception(1);\r\n        break\r\n    }\r\n  };\r\n\r\n  const decease = (stat) => {\r\n    if(props.strength <= 1 || props.dexterity <= 1 ||\r\n      props.perception <= 1 || props.intelligence <=1) {\r\n      return\r\n    }\r\n    props.changePoints(1);\r\n    switch (stat) {\r\n      case 'str':\r\n        props.changeStrength(-1);\r\n        break;\r\n      case 'dex':\r\n        props.changeDexterity(-1);\r\n        break;\r\n      case 'int':\r\n        props.changeIntelligence(-1);\r\n        break;\r\n      case 'per':\r\n        props.changePerception(-1);\r\n        break\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.statList}>\r\n        <div><span className={styles.stat}>Strength: {props.strength}</span>\r\n          <button onClick={() => decease('str')} className={styles.button}>-</button>\r\n          <button onClick={() => increase('str')} className={styles.button}>+</button>\r\n        </div>\r\n        <div><span className={styles.stat}>Dexterity: {props.dexterity}</span>\r\n          <button onClick={() => decease('dex')} className={styles.button}>-</button>\r\n          <button onClick={() => increase('dex')} className={styles.button}>+</button>\r\n        </div>\r\n        <div><span className={styles.stat}>Intelligence: {props.intelligence}</span>\r\n          <button onClick={() => decease('int')} className={styles.button}>-</button>\r\n          <button onClick={() => increase('int')} className={styles.button}>+</button>\r\n        </div>\r\n        <div><span className={styles.stat}>Perception: {props.perception}</span>\r\n          <button onClick={() => decease('per')} className={styles.button}>-</button>\r\n          <button onClick={() => increase('per')} className={styles.button}>+</button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.description}>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {Traits} from \"./traits\";\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    goodTraitsList: state.traits.goodTraitsList,\r\n    badTraitsList: state.traits.badTraitsList,\r\n    pickedTraits: state.traits.pickedTraits,\r\n    pointsLeft: state.header.pointsLeft,\r\n    activeTrait: state.traits.activeTrait\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    pickTrait: (trait) => {\r\n      dispatch({type: `PICK-TRAIT`, trait})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: `CHANGE-POINTS`, value})\r\n    },\r\n    activateTrait: (trait) => {\r\n      dispatch({type: `ACTIVATE-TRAIT`, trait})\r\n    }\r\n  }\r\n};\r\n\r\nconst TraitsContainer = connect(mapStateToProps, mapDispatchToProps)(Traits);\r\nexport default TraitsContainer;","import React from 'react';\r\nimport styles from './traits.module.css'\r\n\r\nexport const Traits = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={styles.traitsHolder}>\r\n        {\r\n          props.goodTraitsList.map((item, index) => {\r\n            let traitName = Object.keys(item)[0];\r\n            return <span onClick={() => {\r\n              props.activateTrait(item[traitName])\r\n            }}\r\n          onDoubleClick={() =>{\r\n            props.pickTrait(item)\r\n          }}\r\n          key={index} className={styles.trait}>{traitName}</span>\r\n          })\r\n        }\r\n      </div>\r\n      <div className={styles.traitsHolder}>\r\n        {\r\n          props.badTraitsList.map((item, index) => {\r\n            let traitName = Object.keys(item)[0];\r\n            return <span onClick={() => {\r\n              props.activateTrait(item[traitName])\r\n            }}\r\n                         onDoubleClick={() =>{\r\n                           props.pickTrait(item)\r\n                         }}\r\n              key={index} className={styles.trait}>{traitName}</span>\r\n          })\r\n        }\r\n      </div>\r\n      <div>{props.activeTrait ? props.activeTrait.description : ``}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/header/headerContainer\";\nimport {Route} from \"react-router-dom\";\nimport ProfessionContainer from \"./components/profession/professionContainer\";\nimport StatsContainer from \"./components/stats/statsContainer\";\nimport TraitsContainer from \"./components/traits/traitsContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <HeaderContainer/>\n      <Route path={`/profession`}\n             render={() => <ProfessionContainer/>}/>\n      <Route path={`/stats`}\n             render={() => <StatsContainer/>}/>\n      <Route path={`/traits`}\n             render={() => <TraitsContainer/>}/>\n      {/*<Route path={`/skills`}*/}\n             {/*render={() => <Skills/>}/>*/}\n      {/*<Route path={`/description`}*/}\n             {/*render={() => <Description/>}/>*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n  pointsLeft: 8\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE-POINTS':\r\n      return {\r\n        ...state,\r\n        pointsLeft: state.pointsLeft + action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","let initialState = {\r\n  professionList: [\r\n    {\r\n      Ninja: {\r\n        cost: 3\r\n      }\r\n    },\r\n    {\r\n      Hobo: {\r\n        cost: 1\r\n      }\r\n    },\r\n  ],\r\n  activeProfession: {}\r\n};\r\n\r\nexport const professionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ACTIVATE-PROFESSION':\r\n      return {\r\n        ...state,\r\n        activeProfession: action.profession\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","let initialState = {\r\n  strength: 8,\r\n  dexterity: 8,\r\n  intelligence: 8,\r\n  perception: 8\r\n};\r\n\r\nexport const statsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case `CHANGE-STRENGTH`:\r\n      return {\r\n        ...state,\r\n        strength: state.strength + action.value\r\n      };\r\n    case `CHANGE-DEXTERITY`:\r\n      return {\r\n        ...state,\r\n        dexterity: state.dexterity + action.value\r\n      };\r\n    case `CHANGE-INTELLIGENCE`:\r\n      return {\r\n        ...state,\r\n        intelligence: state.intelligence + action.value\r\n      };\r\n    case `CHANGE-PERCEPTION`:\r\n      return {\r\n        ...state,\r\n        perception: state.perception + action.value\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};","let initialState = {\r\n  goodTraitsList: [\r\n    {\r\n      fast: {\r\n        cost: 3,\r\n        description: `do some fasty`\r\n      }\r\n    },\r\n    {\r\n      willpower: {\r\n        cost: 2,\r\n        description: `do some willpowery`\r\n      }\r\n    },\r\n    {\r\n      religious: {\r\n        cost: 1,\r\n        description: `do some religiously`\r\n      }\r\n    }\r\n  ],\r\n\r\n  badTraitsList: [\r\n    {\r\n      albino: {\r\n        cost: -1,\r\n        description: `do some albiny`\r\n      }\r\n    },\r\n    {\r\n      asthma: {\r\n        cost: -3,\r\n        description: `do some asthmy`\r\n      }\r\n    },\r\n    {\r\n      insomnia: {\r\n        cost: -2,\r\n        description: `do some insomny`\r\n      }\r\n    },\r\n  ],\r\n\r\n  activeTrait: null,\r\n\r\n  pickedTraits: []\r\n};\r\n\r\nexport const traitsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ACTIVATE-TRAIT':\r\n      return {\r\n        ...state,\r\n        activeTrait: action.trait\r\n      };\r\n    case 'PICK-TRAIT':\r\n      return {\r\n        ...state,\r\n        pickedTraits: [...state.pickedTraits, action.trait]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import {combineReducers, createStore} from \"redux\";\r\nimport {headerReducer} from \"./headerReducer\";\r\nimport {professionReducer} from \"./professionReducer\";\r\nimport {statsReducer} from \"./statsReducer\";\r\nimport {traitsReducer} from \"./traitsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  header: headerReducer,\r\n  profession: professionReducer,\r\n  stats: statsReducer,\r\n  traits: traitsReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"stats_statList__2ZcbN\",\"stat\":\"stats_stat__1jg18\",\"description\":\"stats_description__1UP7z\",\"button\":\"stats_button__so2Us\"};"],"sourceRoot":""}