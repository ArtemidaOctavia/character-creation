{"version":3,"sources":["components/header/header.module.css","components/traits/traitsList/traitsList.module.css","components/profession/profession.module.css","components/header/headerContainer.jsx","components/header/header.jsx","components/profession/professionContainer.jsx","components/profession/profession.jsx","components/stats/statDescription/statDescription.jsx","components/stats/statsContainer.jsx","components/stats/stats.jsx","components/traits/traitsList/traitsList.jsx","components/traits/traitsContainer.jsx","components/traits/traits.jsx","components/skills/skillsContainer.jsx","components/skills/skills.jsx","App.js","serviceWorker.js","redux/headerReducer.js","redux/professionReducer.js","redux/statsReducer.js","redux/traitsReducer.js","redux/skillsReducer.js","redux/store.js","index.js"],"names":["module","exports","HeaderContainer","connect","state","pointsLeft","header","pickedTraits","traits","dispatch","changePoints","value","type","props","className","styles","button","to","error","ProfessionContainer","professionList","profession","activeProfession","activateProfession","map","index","professionName","Object","keys","onClick","cost","pickProfession","key","active","StatDescription","stat","activeStatName","statsList","filter","item","toFixed","renderStatInfluence","description","StatsContainer","stats","activeStat","changeStat","activateStat","statName","onMouseOver","onMouseOut","decreaseStat","increaseStat","TraitsList","traitPicked","trait","some","pickedTrait","traitsHolder","traitsList","traitName","pickTrait","activateTrait","TraitsContainer","goodTraitsList","badTraitsList","activeTrait","SkillsContainer","skillsList","skills","activeSkill","changeSkill","skill","activateSkill","skillName","decreaseSkill","increaseSkill","App","path","render","Boolean","window","location","hostname","match","initialState","Ninja","Hobo","strength","dexterity","intelligence","perception","fast","willpower","religious","albino","asthma","insomnia","melee","crafting","tailoring","medicine","reducers","combineReducers","action","clone","JSON","parse","stringify","forEach","actionTrait","withRemovedTrait","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5d06c19f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3Bf2j\",\"button\":\"header_button__1i0ad\",\"pointsCounter\":\"header_pointsCounter__RWtsp\",\"error\":\"header_error__1XrN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"traitsHolder\":\"traitsList_traitsHolder__3J0Rh\",\"trait\":\"traitsList_trait__oklwh\",\"pickedTrait\":\"traitsList_pickedTrait__3NwmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profession\":\"profession_profession__2XyZ2\",\"active\":\"profession_active__3tgdz\"};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Header} from \"./header\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    pointsLeft: state.header.pointsLeft,\r\n    pickedTraits: state.traits.pickedTraits\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changePoints: (value) => {\r\n      dispatch({type: 'CHANGE-POINTS', value})\r\n    }\r\n  }\r\n};\r\n\r\nconst HeaderContainer =  connect(mapStateToProps, mapDispatchToProps)(Header);\r\nexport default HeaderContainer;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./header.module.css\"\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <nav>\r\n        <NavLink className={styles.button} to={`/profession`}>Profession</NavLink>\r\n        <NavLink className={styles.button} to={`/stats`}>Stats</NavLink>\r\n        <NavLink className={styles.button} to={`/traits`}>Traits</NavLink>\r\n        <NavLink className={styles.button} to={`/skills`}>Skills</NavLink>\r\n        <NavLink className={styles.button} to={`/description`}>Description</NavLink>\r\n      </nav>\r\n      <div className={props.pointsLeft < 0 ? styles.error : ``}>Points left: {props.pointsLeft}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Profession} from \"./profession\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    professionList: state.profession.professionList,\r\n    activeProfession: state.profession.activeProfession\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    activateProfession: (profession) => {\r\n      dispatch({type: 'ACTIVATE-PROFESSION', profession: profession})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: 'CHANGE-POINTS', value: value})\r\n    }\r\n  }\r\n};\r\n\r\nconst ProfessionContainer = connect(mapStateToProps, mapDispatchToProps)(Profession);\r\nexport default ProfessionContainer;","import React from 'react';\r\nimport styles from \"./profession.module.css\"\r\n\r\nexport const Profession = (props) => {\r\n\r\n  const pickProfession = (profession, professionName) => {\r\n    if (props.activeProfession === profession[professionName]) {\r\n      return;\r\n    }\r\n    if (props.activeProfession.cost) {\r\n      props.changePoints(props.activeProfession.cost)\r\n    }\r\n    props.activateProfession(profession[professionName]);\r\n    props.changePoints(-profession[professionName].cost);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {props.professionList.map((profession, index) => {\r\n          let professionName = Object.keys(profession)[0];\r\n          return <span onClick={() => {\r\n            pickProfession(profession, professionName)\r\n          }} key={index}\r\n                       className={profession[professionName] === props.activeProfession ?\r\n                         `${styles.profession} ${styles.active}` :\r\n                         styles.profession}>{professionName}</span>\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from \"react\";\r\n\r\nexport const StatDescription = (props) => {\r\n\r\n  const renderStatInfluence = (stat) => {\r\n    if (stat) {\r\n      let activeStatName = Object.keys(stat)[0];\r\n      let targetStat = props.statsList.filter(item => Object.keys(item)[0] === activeStatName);\r\n      let value = targetStat[0][activeStatName];\r\n      switch (activeStatName) {\r\n        case `strength`:\r\n          return<div>\r\n            <div>Base HP: {value * 10}</div>\r\n            <div>Max carrying weight: {value * 6}kg</div>\r\n            <div>Blunt damage bonus: {value * 1}</div>\r\n          </div>;\r\n        case `dexterity`:\r\n          return<div>\r\n            <div>Close combat precision modifier: {(value * 0.25).toFixed(2)}</div>\r\n            <div>Throwing penalty for one point of target dodge skill: {(value * 3.125).toFixed(0)}</div>\r\n            <div>Ranged combat penalty: {-16 + value}</div>\r\n          </div>;\r\n        case `intelligence`:\r\n          return<div>\r\n            <div>Reading time: {(value * 12.5).toFixed(0)}%</div>\r\n            <div>Craft speed bonus: {value}%</div>\r\n          </div>;\r\n        case `perception`:\r\n          return<div>\r\n            <div>Aim penalty {-(24 - (value * 1.3)).toFixed(0)}</div>\r\n          </div>\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderStatInfluence(props.stat)}\r\n      {props.stat.description}\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {Stats} from \"./stats\";\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    statsList: state.stats.statsList,\r\n    activeStat: state.stats.activeStat\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeStat: (stat, value) => {\r\n      dispatch({type: `CHANGE-STAT`, stat, value})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: `CHANGE-POINTS`, value})\r\n    },\r\n    activateStat: (stat) => {\r\n      dispatch({type: `ACTIVATE-STAT`, stat})\r\n    }\r\n  }\r\n};\r\n\r\nconst StatsContainer = connect(mapStateToProps, mapDispatchToProps)(Stats);\r\nexport default StatsContainer;","import React from 'react';\r\nimport {StatDescription} from \"./statDescription/statDescription\";\r\n\r\nexport const Stats = (props) => {\r\n\r\n  const increaseStat = (stat, statName) => {\r\n    if (stat[statName] >= 14) {\r\n      return\r\n    }\r\n    if (stat[statName] < 12) {\r\n      props.changeStat(statName, 1);\r\n      props.changePoints(-1)\r\n    } else {\r\n      props.changeStat(statName, 1);\r\n      props.changePoints(-2)\r\n    }\r\n  };\r\n\r\n  const decreaseStat = (stat, statName) => {\r\n    if (stat[statName] <= 4) {\r\n      return\r\n    }\r\n    if (stat[statName] <= 12) {\r\n      props.changeStat(statName, -1);\r\n      props.changePoints(1)\r\n    } else {\r\n      props.changeStat(statName, -1);\r\n      props.changePoints(2)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        props.statsList.map((stat, index) => {\r\n          let statName = Object.keys(stat)[0];\r\n          return <div key={index}><span\r\n            onMouseOver={() => {\r\n              props.activateStat(stat)\r\n            }}\r\n            onMouseOut={() => {\r\n              props.activateStat(null)\r\n            }}>\r\n            {statName} {stat[statName]}\r\n            <button onClick={() => {\r\n              decreaseStat(stat, statName)\r\n            }}>-</button>\r\n            <button onClick={() => {\r\n              increaseStat(stat, statName)\r\n            }}>+</button>\r\n          </span>\r\n          </div>\r\n        })\r\n      }\r\n      {props.activeStat && <StatDescription statsList={props.statsList} stat={props.activeStat}/>}\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport styles from './traitsList.module.css'\r\n\r\nexport const TraitsList = (props) => {\r\n\r\n  const traitPicked = (trait) => {\r\n    return props.pickedTraits.some((pickedTrait) => {\r\n      return Object.keys(pickedTrait)[0] === Object.keys(trait)[0];\r\n    });\r\n  };\r\n\r\n  return (\r\n      <div className={styles.traitsHolder}>\r\n        {\r\n          props.traitsList.map((item, index) => {\r\n            let traitName = Object.keys(item)[0];\r\n            return <span\r\n              key={index}\r\n              onClick={() => {\r\n                let cost = item[Object.keys(item)[0]].cost;\r\n                props.pickTrait(item);\r\n                traitPicked(item) ? props.changePoints(cost) : props.changePoints(-cost);\r\n              }}\r\n              onMouseOver={() => {\r\n                props.activateTrait(item[traitName])\r\n              }}\r\n              onMouseOut={() => {\r\n                props.activateTrait(null)\r\n              }}\r\n              className={traitPicked(item) ? `${styles.trait} ${styles.pickedTrait}` : styles.trait}>{traitName}</span>\r\n          })\r\n        }\r\n      </div>\r\n  )\r\n};","import React from 'react';\r\nimport {Traits} from \"./traits\";\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    goodTraitsList: state.traits.goodTraitsList,\r\n    badTraitsList: state.traits.badTraitsList,\r\n    pickedTraits: state.traits.pickedTraits,\r\n    pointsLeft: state.header.pointsLeft,\r\n    activeTrait: state.traits.activeTrait\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    pickTrait: (trait) => {\r\n      dispatch({type: `TOGGLE-TRAIT-PICK`, trait})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: `CHANGE-POINTS`, value})\r\n    },\r\n    activateTrait: (trait) => {\r\n      dispatch({type: `ACTIVATE-TRAIT`, trait})\r\n    }\r\n  }\r\n};\r\n\r\nconst TraitsContainer = connect(mapStateToProps, mapDispatchToProps)(Traits);\r\nexport default TraitsContainer;","import React from 'react';\r\nimport {TraitsList} from \"./traitsList/traitsList\";\r\n\r\nexport const Traits = (props) => {\r\n  return (\r\n    <div>\r\n      <TraitsList  traitsList={props.goodTraitsList} pickTrait={props.pickTrait}\r\n                   activateTrait={props.activateTrait} changePoints={props.changePoints}\r\n                   pickedTraits={props.pickedTraits} />\r\n      <TraitsList  traitsList={props.badTraitsList} pickTrait={props.pickTrait}\r\n                   activateTrait={props.activateTrait} changePoints={props.changePoints}\r\n                   pickedTraits={props.pickedTraits} />\r\n      <div>{props.activeTrait ? `${props.activeTrait.description}, cost ${props.activeTrait.cost}` : ``}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Skills} from \"./skills\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    skillsList: state.skills.skillsList,\r\n    activeSkill: state.skills.activeSkill\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeSkill: (skill, value) => {\r\n      dispatch({type: `CHANGE-SKILL`, skill, value})\r\n    },\r\n    changePoints: (value) => {\r\n      dispatch({type: `CHANGE-POINTS`, value})\r\n    },\r\n    activateSkill: (skill) => {\r\n      dispatch({type: `ACTIVATE-SKILL`, skill})\r\n    }\r\n  }\r\n};\r\n\r\nconst SkillsContainer = connect(mapStateToProps, mapDispatchToProps)(Skills);\r\nexport default SkillsContainer;","import React from 'react';\r\n\r\nexport const Skills = (props) => {\r\n\r\n  const increaseSkill = (skill, skillName) => {\r\n    switch (skill[skillName]) {\r\n      case 1:\r\n      case 2:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-1);\r\n        break;\r\n      case 3:\r\n      case 4:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-2);\r\n        break;\r\n      case 5:\r\n      case 6:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-3);\r\n        break;\r\n      case 7:\r\n      case 8:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-4);\r\n        break;\r\n      case 9:\r\n        props.changeSkill(skillName, 1);\r\n        props.changePoints(-5);\r\n    }\r\n  };\r\n\r\n  const decreaseSkill = (skill, skillName) => {\r\n    switch (skill[skillName]) {\r\n      case 2:\r\n      case 3:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(1);\r\n        break;\r\n      case 4:\r\n      case 5:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(2);\r\n        break;\r\n      case 6:\r\n      case 7:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(3);\r\n        break;\r\n      case 8:\r\n      case 9:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(4);\r\n        break;\r\n      case 10:\r\n        props.changeSkill(skillName, -1);\r\n        props.changePoints(5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        props.skillsList.map((skill) => {\r\n          let skillName = Object.keys(skill)[0];\r\n          return <div><span\r\n            onMouseOver={() => {\r\n              props.activateSkill(skill)\r\n            }}\r\n            onMouseOut={() => {\r\n              props.activateSkill(null)\r\n            }}>\r\n            {skillName} {skill[skillName]}\r\n            <button onClick={() => {\r\n              decreaseSkill(skill, skillName)\r\n            }}>-</button>\r\n            <button onClick={() => {\r\n              increaseSkill(skill, skillName)\r\n            }}>+</button>\r\n          </span>\r\n          </div>\r\n        })\r\n      }\r\n      <div>{props.activeSkill && props.activeSkill.description}</div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/header/headerContainer\";\nimport {Route} from \"react-router-dom\";\nimport ProfessionContainer from \"./components/profession/professionContainer\";\nimport StatsContainer from \"./components/stats/statsContainer\";\nimport TraitsContainer from \"./components/traits/traitsContainer\";\nimport SkillsContainer from \"./components/skills/skillsContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <HeaderContainer/>\n      <Route path={`/profession`}\n             render={() => <ProfessionContainer/>}/>\n      <Route path={`/stats`}\n             render={() => <StatsContainer/>}/>\n      <Route path={`/traits`}\n             render={() => <TraitsContainer/>}/>\n      <Route path={`/skills`}\n             render={() => <SkillsContainer/>}/>\n      {/*<Route path={`/description`}*/}\n             {/*render={() => <Description/>}/>*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n  pointsLeft: 8\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE-POINTS':\r\n      return {\r\n        ...state,\r\n        pointsLeft: state.pointsLeft + action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","let initialState = {\r\n  professionList: [\r\n    {\r\n      Ninja: {\r\n        cost: 3\r\n      }\r\n    },\r\n    {\r\n      Hobo: {\r\n        cost: 1\r\n      }\r\n    },\r\n  ],\r\n  activeProfession: {}\r\n};\r\n\r\nexport const professionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ACTIVATE-PROFESSION':\r\n      return {\r\n        ...state,\r\n        activeProfession: action.profession\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","let initialState = {\r\n  statsList: [\r\n    {\r\n      strength: 8,\r\n      description: `strength descr`\r\n    },\r\n    {\r\n      dexterity: 8,\r\n      description: `dexterity descr`\r\n    },\r\n    {\r\n      intelligence: 8,\r\n      description: `intelligence descr`\r\n    },\r\n    {\r\n      perception: 8,\r\n      description: `perception descr`\r\n    },\r\n  ],\r\n  activeStat: null\r\n};\r\n\r\nexport const statsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE-STAT':\r\n      let clone = JSON.parse(JSON.stringify(state));\r\n      clone.statsList.forEach((stat) => {\r\n        let [statName] = Object.keys(stat);\r\n        if (statName === action.stat) {\r\n          stat[statName] += action.value\r\n        }\r\n      });\r\n      return clone;\r\n    case `ACTIVATE-STAT`:\r\n      return {\r\n        ...state,\r\n        activeStat: action.stat\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};","let initialState = {\r\n  goodTraitsList: [\r\n    {\r\n      fast: {\r\n        cost: 3,\r\n        description: `do some fasty`\r\n      }\r\n    },\r\n    {\r\n      willpower: {\r\n        cost: 2,\r\n        description: `do some willpowery`\r\n      }\r\n    },\r\n    {\r\n      religious: {\r\n        cost: 1,\r\n        description: `do some religiously`\r\n      }\r\n    }\r\n  ],\r\n\r\n  badTraitsList: [\r\n    {\r\n      albino: {\r\n        cost: -1,\r\n        description: `do some albiny`\r\n      }\r\n    },\r\n    {\r\n      asthma: {\r\n        cost: -3,\r\n        description: `do some asthmy`\r\n      }\r\n    },\r\n    {\r\n      insomnia: {\r\n        cost: -2,\r\n        description: `do some insomny`\r\n      }\r\n    },\r\n  ],\r\n\r\n  activeTrait: null,\r\n\r\n  pickedTraits: []\r\n};\r\n\r\nexport const traitsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ACTIVATE-TRAIT':\r\n      return {\r\n        ...state,\r\n        activeTrait: action.trait\r\n      };\r\n    case 'TOGGLE-TRAIT-PICK':\r\n      let actionTrait = Object.keys(action.trait)[0];\r\n      let traitPicked = state.pickedTraits.some((trait) => {\r\n        return Object.keys(trait)[0] === actionTrait;\r\n      });\r\n      if (traitPicked) {\r\n        let withRemovedTrait = state.pickedTraits.filter((trait) => {\r\n          return Object.keys(trait)[0] !== actionTrait\r\n        });\r\n        return {\r\n          ...state,\r\n          pickedTraits: withRemovedTrait\r\n        }\r\n      } else return {\r\n        ...state,\r\n        pickedTraits: [...state.pickedTraits, action.trait]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","let initialState = {\r\n  skillsList: [\r\n    {\r\n      melee: 1,\r\n      description: `melee descr`\r\n    },\r\n    {\r\n      crafting: 1,\r\n      description: `crafting descr`\r\n    },\r\n    {\r\n      tailoring: 1,\r\n      description: `tailoring descr`\r\n    },\r\n    {\r\n      medicine: 1,\r\n      description: `medicine descr`\r\n    },\r\n  ],\r\n  activeSkill: null\r\n};\r\n\r\nexport const skillsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE-SKILL':\r\n      let clone = JSON.parse(JSON.stringify(state));\r\n      clone.skillsList.forEach((skill) => {\r\n        let [skillName] = Object.keys(skill);\r\n        if (skillName === action.skill) {\r\n          skill[skillName] += action.value\r\n        }\r\n      });\r\n      return clone;\r\n    case `ACTIVATE-SKILL`:\r\n      return {\r\n        ...state,\r\n        activeSkill: action.skill\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import {combineReducers, createStore} from \"redux\";\r\nimport {headerReducer} from \"./headerReducer\";\r\nimport {professionReducer} from \"./professionReducer\";\r\nimport {statsReducer} from \"./statsReducer\";\r\nimport {traitsReducer} from \"./traitsReducer\";\r\nimport {skillsReducer} from \"./skillsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  header: headerReducer,\r\n  profession: professionReducer,\r\n  stats: statsReducer,\r\n  traits: traitsReducer,\r\n  skills: skillsReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}